	1: Reserved Word: int
	1: ID: programasAtivos
	1: ;
	2: Reserved Word: int
	2: ID: programas
	2: [
	2: Number: 9
	2: ]
	2: ;
	4: Reserved Word: void
	4: ID: main
	4: (
	4: Reserved Word: void
	4: )
	4: {
	5: Reserved Word: int
	5: ID: preempcao
	5: ;
	6: Reserved Word: int
	6: ID: quantum
	6: ;
	7: Reserved Word: int
	7: ID: i
	7: ;
	8: Reserved Word: int
	8: ID: programa
	8: ;
	10: Reserved Word: while
	10: (
	10: Number: 1
	10: >
	10: Number: 0
	10: )
	10: {
	11: ID: output
	11: (
	11: Number: 10000
	11: )
	11: ;
	12: ID: preempcao
	12: Symbol: =
	12: ID: input
	12: (
	12: )
	12: ;
	14: Reserved Word: if
	14: (
	14: ID: preempcao
	14: ==
	14: Number: 1
	14: )
	14: {
	15: ID: output
	15: (
	15: Number: 20000
	15: )
	15: ;
	16: ID: quantum
	16: Symbol: =
	16: ID: input
	16: (
	16: )
	16: ;
	17: }
	17: Reserved Word: else
	17: {
	18: ID: quantum
	18: Symbol: =
	18: Number: 999
	18: ;
	19: }
	21: ID: quantum
	21: (
	21: ID: quantum
	21: )
	21: ;
	23: ID: output
	23: (
	23: Number: 30000
	23: )
	23: ;
	24: ID: programasAtivos
	24: Symbol: =
	24: ID: input
	24: (
	24: )
	24: ;
	26: ID: i
	26: Symbol: =
	26: Number: 0
	26: ;
	27: Reserved Word: while
	27: (
	27: ID: i
	27: <
	27: ID: programasAtivos
	27: )
	27: {
	28: ID: i
	28: Symbol: =
	28: ID: i
	28: +
	28: Number: 1
	28: ;
	29: ID: output
	29: (
	29: Number: 30000
	29: +
	29: ID: i
	29: )
	29: ;
	30: ID: programa
	30: Symbol: =
	30: ID: input
	30: (
	30: )
	30: ;
	32: ID: programas
	32: [
	32: ID: programa
	32: ]
	32: Symbol: =
	32: Number: 1
	32: ;
	33: }
	35: ID: i
	35: Symbol: =
	35: Number: 0
	35: ;
	37: Reserved Word: while
	37: (
	37: ID: programasAtivos
	37: >
	37: Number: 0
	37: )
	37: {
	38: ID: i
	38: Symbol: =
	38: Number: 0
	38: ;
	39: Reserved Word: while
	39: (
	39: ID: i
	39: <
	39: Number: 10
	39: )
	39: {
	40: ID: i
	40: Symbol: =
	40: ID: i
	40: +
	40: Number: 1
	40: ;
	41: Reserved Word: if
	41: (
	41: ID: programas
	41: [
	41: ID: i
	41: ]
	41: ==
	41: Number: 1
	41: )
	41: {
	42: ID: program
	42: (
	42: ID: i
	42: )
	42: ;
	43: }
	44: }
	45: }
	47: ID: output
	47: (
	47: Number: 9999
	47: )
	47: ;
	48: }
	49: }
	49: EOF
Type integer
  Variable programasAtivos
Type vector integer
  Variable programas
Type void
  Function main
    Type void
    Type integer
      Variable preempcao
    Type integer
      Variable quantum
    Type integer
      Variable i
    Type integer
      Variable programa
    While
      Operation: >
        Constant: 1
        Constant: 0
      Call to Function output 
        Constant: 10000
      Assign
        Id: preempcao
        Call to Function input 
      If
        Operation: ==
          Id: preempcao
          Constant: 1
        Call to Function output 
          Constant: 20000
        Assign
          Id: quantum
          Call to Function input 
        Assign
          Id: quantum
          Constant: 999
      Call to Function quantum 
        Id: quantum
      Call to Function output 
        Constant: 30000
      Assign
        Id: programasAtivos
        Call to Function input 
      Assign
        Id: i
        Constant: 0
      While
        Operation: <
          Id: i
          Id: programasAtivos
        Assign
          Id: i
          Operation: +
            Id: i
            Constant: 1
        Call to Function output 
          Operation: +
            Constant: 30000
            Id: i
        Assign
          Id: programa
          Call to Function input 
        Assign
          Vector: programas
            Id: programa
          Constant: 1
      Assign
        Id: i
        Constant: 0
      While
        Operation: >
          Id: programasAtivos
          Constant: 0
        Assign
          Id: i
          Constant: 0
        While
          Operation: <
            Id: i
            Constant: 10
          Assign
            Id: i
            Operation: +
              Id: i
              Constant: 1
          If
            Operation: ==
              Vector: programas
                Id: i
              Constant: 1
            Call to Function program 
              Id: i
      Call to Function output 
        Constant: 9999
