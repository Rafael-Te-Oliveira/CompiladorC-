	1: Reserved Word: int
	1: ID: fact
	1: (
	1: Reserved Word: int
	1: ID: n
	1: )
	1: {
	2: Reserved Word: if
	2: (
	2: ID: n
	2: <=
	2: Number: 0
	2: )
	2: {
	3: Reserved Word: return
	3: Number: 1
	3: ;
	4: }
	5: Reserved Word: return
	5: ID: n
	5: *
	5: ID: fact
	5: (
	5: ID: n
	5: -
	5: Number: 1
	5: )
	5: ;
	6: }
	8: Reserved Word: void
	8: ID: main
	8: (
	8: Reserved Word: void
	8: )
	8: {
	9: Reserved Word: int
	9: ID: n
	9: ;
	10: ID: n
	10: Symbol: =
	10: ID: input
	10: (
	10: )
	10: ;
	11: ID: output
	11: (
	11: ID: fact
	11: (
	11: ID: n
	11: )
	11: )
	11: ;
	12: }
	13: EOF
Type integer
  Function fact
    Type integer
      Unknown ExpNode kind
    If
      Operation: <=
        Id: n
        Constant: 0
      Return
        Constant: 1
    Return
      Operation: *
        Id: n
        Call to Function fact 
          Operation: -
            Id: n
            Constant: 1
Type void
  Function main
    Type void
    Type integer
      Variable n
    Assign
      Id: n
      Call to Function input 
    Call to Function output 
      Call to Function fact 
        Id: n
