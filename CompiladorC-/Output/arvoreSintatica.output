	4: Reserved Word: int
	4: ID: gcd
	4: (
	4: Reserved Word: int
	4: ID: u
	4: ,
	4: Reserved Word: int
	4: ID: v
	4: )
	5: {
	6: Reserved Word: if
	6: (
	6: ID: v
	6: ==
	6: Number: 0
	6: )
	6: Reserved Word: return
	6: ID: u
	6: ;
	7: Reserved Word: else
	7: Reserved Word: return
	7: ID: gcd
	7: (
	7: ID: v
	7: ,
	7: ID: u
	7: -
	7: ID: u
	7: /
	7: ID: v
	7: *
	7: ID: v
	7: )
	7: ;
	9: }
	11: Reserved Word: void
	11: ID: main
	11: (
	11: Reserved Word: void
	11: )
	12: {
	12: Reserved Word: int
	12: ID: x
	12: ;
	12: Reserved Word: int
	12: ID: y
	12: ;
	13: ID: x
	13: Symbol: =
	13: ID: input
	13: (
	13: )
	13: ;
	13: ID: y
	13: Symbol: =
	13: ID: input
	13: (
	13: )
	13: ;
	14: ID: output
	14: (
	14: ID: gcd
	14: (
	14: ID: x
	14: ,
	14: ID: y
	14: )
	14: )
	14: ;
	15: }
	15: EOF
Type integer
  Function gcd
    Type integer
      Variable u
    Type integer
      Variable v
    If
      Operation: ==
        Id: v
        Constant: 0
      Return
        Id: u
      Return
        Call to Function gcd 
          Id: v
          Operation: -
            Id: u
            Operation: *
              Operation: /
                Id: u
                Id: v
              Id: v
Type void
  Function main
    Type void
    Type integer
      Variable x
    Type integer
      Variable y
    Assign
      Id: x
      Call to Function input 
    Assign
      Id: y
      Call to Function input 
    Call to Function output 
      Call to Function gcd 
        Id: x
        Id: y
