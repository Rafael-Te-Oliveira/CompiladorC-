	4: Reserved Word: int
	4: ID: U
	4: [
	4: Number: 10
	4: ]
	4: ;
	6: Reserved Word: int
	6: ID: minloc
	6: (
	6: Reserved Word: int
	6: ID: a
	6: [
	6: ]
	6: ,
	6: Reserved Word: int
	6: ID: low
	6: ,
	6: Reserved Word: int
	6: ID: high
	6: )
	7: {
	7: Reserved Word: int
	7: ID: i
	7: ;
	7: Reserved Word: int
	7: ID: x
	7: ;
	7: Reserved Word: int
	7: ID: k
	7: ;
	8: ID: k
	8: Symbol: =
	8: ID: low
	8: ;
	9: ID: x
	9: Symbol: =
	9: ID: a
	9: [
	9: ID: low
	9: ]
	9: ;
	10: ID: i
	10: Symbol: =
	10: ID: low
	10: +
	10: Number: 1
	10: ;
	11: Reserved Word: while
	11: (
	11: ID: i
	11: <
	11: ID: high
	11: )
	11: {
	12: Reserved Word: if
	12: (
	12: ID: a
	12: [
	12: ID: i
	12: ]
	12: <
	12: ID: x
	12: )
	12: {
	13: ID: x
	13: Symbol: =
	13: ID: a
	13: [
	13: ID: i
	13: ]
	13: ;
	14: ID: k
	14: Symbol: =
	14: ID: i
	14: ;
	15: }
	16: ID: i
	16: Symbol: =
	16: ID: i
	16: +
	16: Number: 1
	16: ;
	17: }
	18: Reserved Word: return
	18: ID: k
	18: ;
	19: }
	21: Reserved Word: void
	21: ID: sort
	21: (
	21: Reserved Word: int
	21: ID: a
	21: [
	21: ]
	21: ,
	21: Reserved Word: int
	21: ID: low
	21: ,
	21: Reserved Word: int
	21: ID: high
	21: )
	22: {
	22: Reserved Word: int
	22: ID: i
	22: ;
	22: Reserved Word: int
	22: ID: k
	22: ;
	23: ID: i
	23: Symbol: =
	23: ID: low
	23: ;
	24: Reserved Word: while
	24: (
	24: ID: i
	24: <
	24: ID: high
	24: -
	24: Number: 1
	24: )
	24: {
	25: Reserved Word: int
	25: ID: t
	25: ;
	26: ID: k
	26: Symbol: =
	26: ID: minloc
	26: (
	26: ID: a
	26: ,
	26: ID: i
	26: ,
	26: ID: high
	26: )
	26: ;
	27: ID: t
	27: Symbol: =
	27: ID: a
	27: [
	27: ID: k
	27: ]
	27: ;
	28: ID: a
	28: [
	28: ID: k
	28: ]
	28: Symbol: =
	28: ID: a
	28: [
	28: ID: i
	28: ]
	28: ;
	29: ID: a
	29: [
	29: ID: i
	29: ]
	29: Symbol: =
	29: ID: t
	29: ;
	30: ID: i
	30: Symbol: =
	30: ID: i
	30: +
	30: Number: 1
	30: ;
	31: }
	32: }
	34: Reserved Word: void
	34: ID: main
	34: (
	34: Reserved Word: void
	34: )
	35: {
	36: Reserved Word: int
	36: ID: i
	36: ;
	37: ID: i
	37: Symbol: =
	37: Number: 0
	37: ;
	38: Reserved Word: while
	38: (
	38: ID: i
	38: <
	38: Number: 10
	38: )
	38: {
	39: ID: U
	39: [
	39: ID: i
	39: ]
	39: Symbol: =
	39: ID: input
	39: (
	39: )
	39: ;
	40: ID: i
	40: Symbol: =
	40: ID: i
	40: +
	40: Number: 1
	40: ;
	41: }
	42: ID: sort
	42: (
	42: ID: U
	42: ,
	42: Number: 0
	42: ,
	42: Number: 10
	42: )
	42: ;
	43: ID: i
	43: Symbol: =
	43: Number: 0
	43: ;
	44: Reserved Word: while
	44: (
	44: ID: i
	44: <
	44: Number: 10
	44: )
	44: {
	45: ID: output
	45: (
	45: ID: U
	45: [
	45: ID: i
	45: ]
	45: )
	45: ;
	46: ID: i
	46: Symbol: =
	46: ID: i
	46: +
	46: Number: 1
	46: ;
	47: }
	48: }
	48: EOF
Type integer
  Variable U
Type integer
  Function minloc
    Type integer
      Variable a
    Type integer
      Variable low
    Type integer
      Variable high
    Type integer
      Variable i
    Type integer
      Variable x
    Type integer
      Variable k
    Assign
      Id: k
      Id: low
    Assign
      Id: x
      Vector: a
        Id: low
    Assign
      Id: i
      Operation: +
        Id: low
        Constant: 1
    While
      Operation: <
        Id: i
        Id: high
      If
        Operation: <
          Vector: a
            Id: i
          Id: x
        Assign
          Id: x
          Vector: a
            Id: i
        Assign
          Id: k
          Id: i
      Assign
        Id: i
        Operation: +
          Id: i
          Constant: 1
    Return
      Id: k
Type void
  Function sort
    Type integer
      Variable a
    Type integer
      Variable low
    Type integer
      Variable high
    Type integer
      Variable i
    Type integer
      Variable k
    Assign
      Id: i
      Id: low
    While
      Operation: <
        Id: i
        Operation: -
          Id: high
          Constant: 1
      Type integer
        Variable t
      Assign
        Id: k
        Call to Function minloc 
          Id: a
          Id: i
          Id: high
      Assign
        Id: t
        Vector: a
          Id: k
      Assign
        Vector: a
          Id: k
        Vector: a
          Id: i
      Assign
        Vector: a
          Id: i
        Id: t
      Assign
        Id: i
        Operation: +
          Id: i
          Constant: 1
Type void
  Function main
    Type void
    Type integer
      Variable i
    Assign
      Id: i
      Constant: 0
    While
      Operation: <
        Id: i
        Constant: 10
      Assign
        Vector: U
          Id: i
        Call to Function input 
      Assign
        Id: i
        Operation: +
          Id: i
          Constant: 1
    Call to Function sort 
      Id: U
      Constant: 0
      Constant: 10
    Assign
      Id: i
      Constant: 0
    While
      Operation: <
        Id: i
        Constant: 10
      Call to Function output 
        Vector: U
          Id: i
      Assign
        Id: i
        Operation: +
          Id: i
          Constant: 1
